{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;;;;;;;;;gCAAwB,oBAAoB;;uBACxB,SAAS;;;;kBACd,IAAI;;;;6BACE,gBAAgB;;;;AACrC,sBAJS,OAAO,GAIP,CAAC;;AAEV,IAAM,OAAO,GAAG,uCAAuC,CAAC;;IACnC,OAAO;AACf,WADQ,OAAO,CACd,UAAU,EAAE;0BADL,OAAO;;AAExB,QAAI,CAAC,UAAU,GAAG,UAAU,CAAC;GAC9B;;eAHkB,OAAO;;WAKpB,gBAAC,IAAI,EAAE,EAAE,EAAE;AACf,UAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,GAAG,CAAC;AACxC,UAAI,WAAW,GAAG,gBAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,2BAAQ,GAAG,CAAC,OAAO,GAAC,6BAA6B,GAAC,MAAM,GAAC,WAAW,EAAE,UAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAK;AAC7F,YAAG,EAAE,EAAC;AACJ,cAAI,GAAG,EAAE;AACP,mBAAO,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;WACtB;AACD,iBAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC3B;OACF,CAAC,CAAC;KACJ;;;WAEW,sBAAC,IAAI,EAAE,EAAE,EAAE;AACrB,UAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,GAAG,CAAC;AACxC,UAAI,WAAW,GAAG,gBAAG,SAAS,CAAC,IAAI,CAAC,CAAC;;AAErC,2BAAQ,GAAG,CAAC,OAAO,GAAC,6BAA6B,GAAC,MAAM,GAAC,WAAW,EAAE,UAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAK;AAC7F,YAAG,EAAE,EAAC;AACJ,cAAI,GAAG,EAAE;AACP,mBAAO,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;WACtB;AACD,iBAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC3B;OACF,CAAC,CAAC;KACJ;;;SA9BkB,OAAO;;;qBAAP,OAAO","file":"app.js","sourcesContent":["import { install } from 'source-map-support';\nimport request from 'request';\nimport qs from 'qs';\nimport polyfill from 'babel/polyfill';\ninstall();\n\nconst baseUrl = 'http://api.redtube.com/?data=redtube.';\nexport default class Redtube {\n  constructor(properties) {\n    this.properties = properties;\n  }\n\n  search(opts, cb) {\n    let output = this.properties.output+'&';\n    let querystring = qs.stringify(opts);\n    request.get(baseUrl+'Videos.searchVideos&output='+output+querystring, (err, body, response) => {\n      if(cb){\n        if (err) {\n          return cb(err, null);\n        }\n        return cb(null, response);\n      }\n    });\n  }\n\n  getVideoById(opts, cb) {\n    let output = this.properties.output+'&';\n    let querystring = qs.stringify(opts);\n\n    request.get(baseUrl+'Videos.getVideoById&output='+output+querystring, (err, body, response) => {\n      if(cb){\n        if (err) {\n          return cb(err, null);\n        }\n        return cb(null, response);\n      }\n    });\n  }\n}"],"sourceRoot":"/Users/paulopires/Workspace/Github/paulohp/redtube/src"}